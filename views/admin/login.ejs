<!DOCTYPE html>
<html lang="id" class="scroll-smooth">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Login - Advance Network RG</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    
    <style>
        .login-container {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        .login-form {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
        }
        .input-group {
            position: relative;
        }
        .input-group input:focus + label,
        .input-group input:not(:placeholder-shown) + label {
            transform: translateY(-25px) scale(0.85);
            color: #667eea;
        }
        .input-group label {
            position: absolute;
            top: 50%;
            left: 16px;
            transform: translateY(-50%);
            transition: all 0.3s ease;
            pointer-events: none;
            color: #6b7280;
        }
        .input-group input {
            padding-top: 24px;
            padding-bottom: 8px;
        }
        .floating-shapes {
            position: absolute;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 0;
        }
        .floating-shapes::before,
        .floating-shapes::after {
            content: '';
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.1);
            animation: float 6s ease-in-out infinite;
        }
        .floating-shapes::before {
            width: 200px;
            height: 200px;
            top: 10%;
            left: -5%;
            animation-delay: 0s;
        }
        .floating-shapes::after {
            width: 150px;
            height: 150px;
            bottom: 10%;
            right: -5%;
            animation-delay: 3s;
        }
        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(180deg); }
        }
        .pulse-animation {
            animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.5; }
        }
    </style>
</head>
<body class="login-container flex items-center justify-center p-4">
    <div class="floating-shapes"></div>
    
    <div class="login-form p-8 w-full max-w-md relative z-10">
        <!-- Header -->
        <div class="text-center mb-8">
            <div class="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-cyan-500 to-blue-500 rounded-full mb-4">
                <i class="fas fa-shield-alt text-white text-2xl"></i>
            </div>
            <h1 class="text-3xl font-bold text-gray-900 mb-2">Admin Panel</h1>
            <p class="text-gray-600">Advance Network RG Management</p>
        </div>

        <!-- Alert Messages -->
        <div id="alert-container" class="hidden mb-6">
            <div id="alert" class="p-4 rounded-lg"></div>
        </div>

        <!-- Login Form -->
        <form id="loginForm" class="space-y-6">
            <div class="input-group">
                <input 
                    type="text" 
                    id="username" 
                    name="username"
                    placeholder=" "
                    required
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-cyan-500 focus:border-transparent transition-all duration-300"
                >
                <label for="username">Username</label>
            </div>

            <div class="input-group">
                <input 
                    type="password" 
                    id="password" 
                    name="password"
                    placeholder=" "
                    required
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-cyan-500 focus:border-transparent transition-all duration-300"
                >
                <label for="password">Password</label>
                <button 
                    type="button" 
                    id="togglePassword"
                    class="absolute right-4 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600"
                >
                    <i class="fas fa-eye"></i>
                </button>
            </div>

            
            <button 
                type="submit" 
                id="loginBtn"
                class="w-full bg-gradient-to-r from-cyan-500 to-blue-500 text-black py-3 px-4 rounded-lg font-semibold hover:from-cyan-600 hover:to-blue-600 focus:ring-4 focus:ring-cyan-200 transition-all duration-300 transform hover:scale-105"
            >
                <span id="loginBtnText" class="text-black font-bold">
                    <i class="fas fa-sign-in-alt mr-2 text-blue-50"></i>
                    Login
                </span>
                <span id="loginBtnLoading" class="hidden text-white font-bold">
                    <i class="fas fa-spinner fa-spin mr-2 text-black"></i>
                    Signing In...
                </span>
            </button>
        </form>

        <!-- Footer -->
        <div class="mt-8 text-center">
            <p class="text-sm text-gray-500">
                Protected by ANRG Security System
            </p>
            <div class="mt-4 flex justify-center items-center space-x-4">
                <div class="w-2 h-2 bg-green-500 rounded-full pulse-animation"></div>
                <span class="text-xs text-gray-400">System Online</span>
            </div>
        </div>
    </div>

    <!-- Background Pattern -->
    <div class="fixed inset-0 z-0 opacity-10">
        <div class="absolute inset-0" style="background-image: url('data:image/svg+xml,%3Csvg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"%3E%3Cg fill="none" fill-rule="evenodd"%3E%3Cg fill="%23ffffff" fill-opacity="0.1"%3E%3Ccircle cx="30" cy="30" r="4"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E');"></div>
    </div>

    <script>
        // DOM Elements
        const loginForm = document.getElementById('loginForm');
        const alertContainer = document.getElementById('alert-container');
        const alert = document.getElementById('alert');
        const loginBtn = document.getElementById('loginBtn');
        const loginBtnText = document.getElementById('loginBtnText');
        const loginBtnLoading = document.getElementById('loginBtnLoading');
        const togglePassword = document.getElementById('togglePassword');
        const passwordInput = document.getElementById('password');

        // Toggle password visibility
        togglePassword.addEventListener('click', () => {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            togglePassword.innerHTML = type === 'password' 
                ? '<i class="fas fa-eye"></i>' 
                : '<i class="fas fa-eye-slash"></i>';
        });

        // Show alert
        function showAlert(message, type = 'error') {
            alertContainer.classList.remove('hidden');
            alert.className = `p-4 rounded-lg ${type === 'error' ? 'bg-red-100 text-red-700 border border-red-300' : 'bg-green-100 text-green-700 border border-green-300'}`;
            alert.innerHTML = `
                <div class="flex items-center">
                    <i class="fas fa-${type === 'error' ? 'exclamation-triangle' : 'check-circle'} mr-2"></i>
                    <span>${message}</span>
                </div>
            `;
            
            // Auto hide after 5 seconds
            setTimeout(() => {
                alertContainer.classList.add('hidden');
            }, 5000);
        }

        // Show loading state
        function setLoading(loading) {
            if (loading) {
                loginBtnText.classList.add('hidden');
                loginBtnLoading.classList.remove('hidden');
                loginBtn.disabled = true;
            } else {
                loginBtnText.classList.remove('hidden');
                loginBtnLoading.classList.add('hidden');
                loginBtn.disabled = false;
            }
        }

        // Handle form submission
        loginForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const formData = new FormData(loginForm);
            const username = formData.get('username');
            const password = formData.get('password');

            // Simple validation
            if (!username || !password) {
                showAlert('Please fill in all fields');
                return;
            }

            setLoading(true);

            try {
                // Simulate API call (replace with actual authentication)
                await new Promise(resolve => setTimeout(resolve, 1500));
                
                // Simple authentication (in production, use proper authentication)
                if (username === 'admin' && password === 'admin123') {
                    // Store token
                    localStorage.setItem('adminToken', 'Bearer admin123');
                    
                    showAlert('Login successful! Redirecting...', 'success');
                    
                    // Redirect to dashboard
                    setTimeout(() => {
                        window.location.href = '/admin';
                    }, 1000);
                } else {
                    showAlert('Invalid username or password');
                }
            } catch (error) {
                showAlert('Login failed. Please try again.');
                console.error('Login error:', error);
            } finally {
                setLoading(false);
            }
        });

        // Check if already logged in
        document.addEventListener('DOMContentLoaded', () => {
            const token = localStorage.getItem('adminToken');
            if (token) {
                // Verify token is still valid (in production, verify with server)
                window.location.href = '/admin';
            }
        });

        // Add some interactive effects
        document.addEventListener('mousemove', (e) => {
            const shapes = document.querySelector('.floating-shapes');
            const rect = shapes.getBoundingClientRect();
            const x = (e.clientX - rect.left) / rect.width;
            const y = (e.clientY - rect.top) / rect.height;
            
            shapes.style.transform = `translate(${x * 10}px, ${y * 10}px)`;
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', (e) => {
            // Alt + L to focus username
            if (e.altKey && e.key.toLowerCase() === 'l') {
                e.preventDefault();
                document.getElementById('username').focus();
            }
        });
    </script>
</body>
</html>
