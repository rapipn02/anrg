<!DOCTYPE html>
<html lang="id" class="scroll-smooth">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Team Management - ANRG Admin</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    
    <style>
        .admin-sidebar {
            background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%);
        }
        .admin-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }
        .admin-card:hover {
            box-shadow: 0 10px 25px -3px rgba(0, 0, 0, 0.1);
        }
        .sidebar-link {
            transition: all 0.3s ease;
        }
        .sidebar-link:hover {
            background-color: rgba(255, 255, 255, 0.1);
            transform: translateX(5px);
        }
        .sidebar-link.active {
            background-color: rgba(255, 255, 255, 0.2);
            border-left: 4px solid #10b981;
        }
        .role-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
        }
        .role-advisor {
            background-color: #fef3c7;
            color: #92400e;
        }
        .role-researcher {
            background-color: #dbeafe;
            color: #1e40af;
        }
        .role-student {
            background-color: #dcfce7;
            color: #166534;
        }
        .role-alumni {
            background-color: #f3f4f6;
            color: #374151;
        }
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
        }
        .modal.show {
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .modal-content {
            background: white;
            border-radius: 12px;
            max-width: 90vw;
            max-height: 90vh;
            overflow-y: auto;
            color: #1f2937; /* Ensure text color is dark */
        }
        
        .modal-content input,
        .modal-content select,
        .modal-content textarea {
            color: #1f2937 !important;
            background-color: white !important;
        }
        
        .modal-content input::placeholder,
        .modal-content textarea::placeholder {
            color: #9ca3af !important;
        }
        
        .modal-content label {
            color: #374151 !important;
        }
        .image-preview {
            max-width: 100%;
            max-height: 200px;
            object-fit: cover;
            border-radius: 8px;
        }
        .team-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            object-fit: cover;
        }
        
        /* Sidebar Overlay for Mobile */
        .sidebar-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            z-index: 35;
            display: none;
        }
        
        /* Mobile Responsive */
        @media (max-width: 1023px) {
            .sidebar-overlay.show {
                display: block;
            }
            
            .admin-sidebar {
                transform: translateX(-100%);
            }
            
            .admin-sidebar.open {
                transform: translateX(0);
            }
            
            .main-content {
                margin-left: 0 !important;
            }
        }
        
        /* Desktop Responsive */
        @media (min-width: 1024px) {
            .main-content {
                margin-left: 16rem; /* 256px = w-64 */
            }
        }
    </style>
</head>
<body class="bg-gray-100">
    <!-- Admin Header -->
    <header class="bg-white shadow-md fixed w-full top-0 z-50">
        <div class="px-6 py-4 flex justify-between items-center">
            <div class="flex items-center">
                <button id="sidebar-toggle" class="lg:hidden mr-4 text-gray-600 hover:text-gray-900">
                    <i class="fas fa-bars text-xl"></i>
                </button>
                <h1 class="text-2xl font-bold text-gray-900">
                    <i class="fas fa-users text-purple-500 mr-2"></i>
                    Team Management
                </h1>
            </div>
            <div class="flex items-center space-x-4">
                <a href="/" class="text-gray-600 hover:text-gray-900 flex items-center">
                    <i class="fas fa-external-link-alt mr-2"></i>
                    View Site
                </a>
                <button onclick="logout()" class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg transition-colors">
                    <i class="fas fa-sign-out-alt mr-2"></i>Logout
                </button>
            </div>
        </div>
    </header>

    <div class="flex pt-16">
        <!-- Sidebar Overlay (Mobile) -->
        <div id="sidebar-overlay" class="sidebar-overlay" onclick="toggleSidebar()"></div>
        
        <!-- Sidebar -->
        <aside id="sidebar" class="admin-sidebar w-64 min-h-screen fixed lg:relative lg:translate-x-0 transform -translate-x-full transition-transform duration-300 z-40">
            <div class="p-6">
                <nav class="space-y-2">
                    <a href="/admin" class="sidebar-link flex items-center px-4 py-3 text-white rounded-lg">
                        <i class="fas fa-tachometer-alt mr-3"></i>
                        Dashboard
                    </a>
                    <a href="/admin/news" class="sidebar-link flex items-center px-4 py-3 text-white rounded-lg">
                        <i class="fas fa-newspaper mr-3"></i>
                        News Management
                    </a>
                    <a href="/admin/events" class="sidebar-link flex items-center px-4 py-3 text-white rounded-lg">
                        <i class="fas fa-calendar-alt mr-3"></i>
                        Events Management
                    </a>
                    <a href="/admin/team" class="sidebar-link active flex items-center px-4 py-3 text-white rounded-lg">
                        <i class="fas fa-users mr-3"></i>
                        Team Management
                    </a>
                </nav>
            </div>
        </aside>

        <!-- Main Content -->
        <main class="main-content flex-1 p-6">
            <!-- Page Header -->
            <div class="flex justify-between items-center mb-6">
                <div>
                    <h2 class="text-3xl font-bold text-gray-900">Team Members</h2>
                    <p class="text-gray-600">Manage laboratory team members and researchers</p>
                </div>
                <button onclick="openModal('create')" class="bg-purple-600 hover:bg-purple-700 text-blue-600 px-6 py-3 rounded-lg font-semibold transition-colors shadow-lg hover:shadow-xl">
                    <i class="fas fa-plus mr-2"></i>
                    Add New Member
                </button>
            </div>

            <!-- Filters and Search -->
            <div class="admin-card p-6 mb-6">
                <div class="flex flex-wrap gap-4 items-center">
                    <div class="flex-1 min-w-64">
                        <input 
                            type="text" 
                            id="searchInput"
                            placeholder="Search team members..."
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                        >
                    </div>
                    <select id="roleFilter" class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500">
                        <option value="">All Roles</option>
                        <option value="advisor">Advisor</option>
                        <option value="researcher">Researcher</option>
                        <option value="student">Student</option>
                        <option value="alumni">Alumni</option>
                    </select>
                    <select id="statusFilter" class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500">
                        <option value="">All Status</option>
                        <option value="active">Active</option>
                        <option value="inactive">Inactive</option>
                    </select>
                    <button onclick="applyFilters()" class="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg">
                        <i class="fas fa-filter mr-2"></i>Filter
                    </button>
                </div>
            </div>

            <!-- Team Grid View -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-6" id="teamGrid">
                <!-- Team cards will be loaded here -->
            </div>

            <!-- Team Table View (Alternative) -->
            <div class="admin-card hidden" id="tableView">
                <div class="overflow-x-auto">
                    <table class="w-full">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Member</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Contact</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="teamTableBody" class="bg-white divide-y divide-gray-200">
                            <!-- Team items will be loaded here -->
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Team Members Display -->
            <div id="teamContainer">
                <!-- Grid View -->
                <div id="gridView" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
                    <!-- Team members will be loaded here -->
                </div>

                <!-- Table View -->
                <div id="tableView" class="admin-card hidden">
                    <div class="overflow-x-auto">
                        <table class="w-full">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Member</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Contact</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Specialization</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                                </tr>
                            </thead>
                            <tbody id="teamTableBody" class="bg-white divide-y divide-gray-200">
                                <!-- Team members will be loaded here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- View Toggle -->
            <div class="flex justify-between items-center mt-6">
                <div class="text-sm text-gray-700">
                    Total Members: <span id="totalMembers">0</span>
                </div>
                <div class="flex space-x-2">
                    <button onclick="toggleView('grid')" id="gridViewBtn" class="px-4 py-2 bg-purple-600 text-white rounded-lg font-medium hover:bg-purple-700 transition-colors">
                        <i class="fas fa-th mr-2"></i>Grid View
                    </button>
                    <button onclick="toggleView('table')" id="tableViewBtn" class="px-4 py-2 bg-gray-500 text-white rounded-lg font-medium hover:bg-gray-600 transition-colors">
                        <i class="fas fa-list mr-2"></i>Table View
                    </button>
                </div>
            </div>
        </main>
    </div>

    <!-- Modal for Create/Edit Team Member -->
    <div id="teamModal" class="modal">
        <div class="modal-content w-full max-w-3xl p-6 m-4">
            <div class="flex justify-between items-center mb-6">
                <h3 id="modalTitle" class="text-2xl font-bold text-gray-900">Add New Team Member</h3>
                <button onclick="closeModal()" class="text-gray-400 hover:text-gray-600">
                    <i class="fas fa-times text-xl"></i>
                </button>
            </div>

            <form id="teamForm" class="space-y-6">
                <input type="hidden" id="memberId" name="id">
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Full Name</label>
                        <input 
                            type="text" 
                            id="memberName" 
                            name="name"
                            required
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                        >
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Role/Position</label>
                        <select 
                            id="memberRole" 
                            name="role"
                            required
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500"
                        >
                            <option value="">Select Role</option>
                            <option value="advisor">Advisor</option>
                            <option value="researcher">Researcher</option>
                            <option value="student">Student</option>
                            <option value="alumni">Alumni</option>
                        </select>
                    </div>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Email</label>
                        <input 
                            type="email" 
                            id="memberEmail" 
                            name="email"
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500"
                        >
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Phone</label>
                        <input 
                            type="tel" 
                            id="memberPhone" 
                            name="phone"
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500"
                        >
                    </div>
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Specialization/Research Area</label>
                    <input 
                        type="text" 
                        id="memberSpecialization" 
                        name="specialization"
                        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500"
                    >
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Biography</label>
                    <textarea 
                        id="memberBio" 
                        name="bio"
                        rows="4"
                        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                    ></textarea>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Profile Photo</label>
                        <input 
                            type="file" 
                            id="memberPhoto" 
                            name="photo"
                            accept="image/*"
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500"
                        >
                        <div id="photoPreview" class="mt-2 hidden">
                            <img id="previewImg" src="" alt="Preview" class="image-preview">
                        </div>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Status</label>
                        <select 
                            id="memberStatus" 
                            name="status"
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500"
                        >
                            <option value="active">Active</option>
                            <option value="inactive">Inactive</option>
                        </select>
                    </div>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">LinkedIn Profile</label>
                        <input 
                            type="url" 
                            id="memberLinkedin" 
                            name="linkedin"
                            placeholder="https://linkedin.com/in/..."
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500"
                        >
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Google Scholar</label>
                        <input 
                            type="url" 
                            id="memberScholar" 
                            name="scholar"
                            placeholder="https://scholar.google.com/..."
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500"
                        >
                    </div>
                </div>

                <div class="flex justify-end space-x-4">
                    <button type="button" onclick="closeModal()" class="px-6 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50">
                        Cancel
                    </button>
                    <button type="submit" class="px-6 py-2 bg-purple-600 hover:bg-purple-700 text-blue-500 rounded-lg font-semibold shadow-lg hover:shadow-xl transition-all">
                        <span id="submitBtnText">Save Member</span>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Overlay -->
    <div id="sidebar-overlay" class="fixed inset-0 bg-black opacity-50 z-30 lg:hidden hidden"></div>

    <script>
        // Global variables
        const token = localStorage.getItem('adminToken') || 'Bearer admin123';
        const API_BASE = '/api/admin';
        let teamData = [];
        let currentView = 'grid';

        // Initialize
        document.addEventListener('DOMContentLoaded', () => {
            // Sidebar toggle functionality
            const sidebarToggle = document.getElementById('sidebar-toggle');
            const sidebar = document.getElementById('sidebar');
            const overlay = document.getElementById('sidebar-overlay');
            
            // Toggle sidebar function
            window.toggleSidebar = function() {
                sidebar.classList.toggle('open');
                overlay.classList.toggle('show');
            }
            
            // Add event listener to toggle button
            if (sidebarToggle) {
                sidebarToggle.addEventListener('click', toggleSidebar);
            }
            
            // Close sidebar when clicking outside on mobile
            overlay.addEventListener('click', toggleSidebar);
            
            loadTeam();
            setupEventListeners();
        });

        // Setup event listeners
        function setupEventListeners() {
            // Photo preview
            document.getElementById('memberPhoto').addEventListener('change', function(e) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        document.getElementById('previewImg').src = e.target.result;
                        document.getElementById('photoPreview').classList.remove('hidden');
                    };
                    reader.readAsDataURL(file);
                }
            });

            // Form submission
            document.getElementById('teamForm').addEventListener('submit', handleFormSubmit);

            // Search
            document.getElementById('searchInput').addEventListener('input', debounce(applyFilters, 300));
        }

        // Debounce function
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // Load team data
        async function loadTeam() {
            try {
                const response = await fetch(`${API_BASE}/team`, {
                    headers: { 'Authorization': token }
                });
                const data = await response.json();
                
                if (data.success) {
                    teamData = data.data || [];
                    displayTeam(teamData);
                    updateStats();
                }
            } catch (error) {
                console.error('Error loading team:', error);
                showAlert('Failed to load team members', 'error');
            }
        }

        // Display team members
        function displayTeam(members) {
            if (currentView === 'grid') {
                displayGridView(members);
            } else {
                displayTableView(members);
            }
        }

        // Display grid view
        function displayGridView(members) {
            const container = document.getElementById('gridView');
            
            if (members.length === 0) {
                container.innerHTML = `
                    <div class="col-span-full text-center py-12">
                        <i class="fas fa-users text-4xl text-gray-400 mb-4"></i>
                        <p class="text-gray-500 text-lg">No team members found</p>
                    </div>
                `;
                return;
            }

            container.innerHTML = members.map(member => `
                <div class="admin-card p-6 text-center">
                    <div class="relative inline-block mb-4">
                        <img src="${member.photo ? `/images/team/${member.photo}` : '/images/default-avatar.svg'}" 
                             alt="${member.name}" 
                             class="w-20 h-20 rounded-full object-cover mx-auto border-4 border-gray-200">
                        <div class="absolute -bottom-1 -right-1 w-6 h-6 rounded-full ${member.status === 'active' ? 'bg-green-500' : 'bg-gray-400'} border-2 border-white"></div>
                    </div>
                    
                    <h3 class="text-lg font-bold text-gray-900 mb-2">${member.name}</h3>
                    <p class="text-sm text-purple-600 font-medium mb-2">${member.role.charAt(0).toUpperCase() + member.role.slice(1)}</p>
                    <p class="text-sm text-gray-600 mb-3">${member.specialization || 'No specialization'}</p>
                    
                    <div class="flex justify-center space-x-2 mb-4">
                        ${member.email ? `<a href="mailto:${member.email}" class="text-gray-400 hover:text-blue-500"><i class="fas fa-envelope"></i></a>` : ''}
                        ${member.linkedin ? `<a href="${member.linkedin}" target="_blank" class="text-gray-400 hover:text-blue-600"><i class="fab fa-linkedin"></i></a>` : ''}
                        ${member.scholar ? `<a href="${member.scholar}" target="_blank" class="text-gray-400 hover:text-green-600"><i class="fas fa-graduation-cap"></i></a>` : ''}
                    </div>
                    
                    <div class="flex justify-center space-x-2">
                        <button onclick="openModal('edit', '${member.id}')" class="text-blue-600 hover:text-blue-800 px-3 py-1 rounded-lg border border-blue-200 hover:bg-blue-50">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button onclick="deleteMember('${member.id}')" class="text-red-600 hover:text-red-800 px-3 py-1 rounded-lg border border-red-200 hover:bg-red-50">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </div>
            `).join('');
        }

        // Display table view
        function displayTableView(members) {
            const tbody = document.getElementById('teamTableBody');
            
            if (members.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="6" class="px-6 py-4 text-center text-gray-500">
                            No team members found
                        </td>
                    </tr>
                `;
                return;
            }

            tbody.innerHTML = members.map(member => `
                <tr class="hover:bg-gray-50">
                    <td class="px-6 py-4">
                        <div class="flex items-center">
                            <img src="${member.photo ? `/images/team/${member.photo}` : '/images/default-avatar.svg'}" 
                                 alt="${member.name}" 
                                 class="team-avatar mr-4">
                            <div>
                                <div class="text-sm font-medium text-gray-900">${member.name}</div>
                                <div class="text-sm text-gray-500">${member.email || 'No email'}</div>
                            </div>
                        </div>
                    </td>
                    <td class="px-6 py-4 text-sm text-gray-900">${member.role.charAt(0).toUpperCase() + member.role.slice(1)}</td>
                    <td class="px-6 py-4 text-sm text-gray-900">${member.phone || '-'}</td>
                    <td class="px-6 py-4 text-sm text-gray-900">${member.specialization || '-'}</td>
                    <td class="px-6 py-4">
                        <span class="inline-flex px-2 py-1 text-xs font-medium rounded-full ${member.status === 'active' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}">
                            ${member.status}
                        </span>
                    </td>
                    <td class="px-6 py-4 text-sm font-medium">
                        <button onclick="openModal('edit', '${member.id}')" class="text-blue-600 hover:text-blue-900 mr-3">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button onclick="deleteMember('${member.id}')" class="text-red-600 hover:text-red-900">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
            `).join('');
        }

        // Toggle view
        function toggleView(view) {
            currentView = view;
            
            const gridView = document.getElementById('gridView');
            const tableView = document.getElementById('tableView');
            const gridBtn = document.getElementById('gridViewBtn');
            const tableBtn = document.getElementById('tableViewBtn');
            
            if (view === 'grid') {
                gridView.classList.remove('hidden');
                tableView.classList.add('hidden');
                gridBtn.classList.remove('bg-gray-500', 'hover:bg-gray-600');
                gridBtn.classList.add('bg-purple-600', 'hover:bg-purple-700');
                tableBtn.classList.remove('bg-purple-600', 'hover:bg-purple-700');
                tableBtn.classList.add('bg-gray-500', 'hover:bg-gray-600');
            } else {
                gridView.classList.add('hidden');
                tableView.classList.remove('hidden');
                tableBtn.classList.remove('bg-gray-500', 'hover:bg-gray-600');
                tableBtn.classList.add('bg-purple-600', 'hover:bg-purple-700');
                gridBtn.classList.remove('bg-purple-600', 'hover:bg-purple-700');
                gridBtn.classList.add('bg-gray-500', 'hover:bg-gray-600');
            }
            
            displayTeam(teamData);
        }

        // Apply filters
        function applyFilters() {
            const search = document.getElementById('searchInput').value.toLowerCase();
            const role = document.getElementById('roleFilter').value;
            const status = document.getElementById('statusFilter').value;

            const filtered = teamData.filter(member => {
                const matchSearch = member.name.toLowerCase().includes(search) || 
                                  (member.specialization && member.specialization.toLowerCase().includes(search));
                const matchRole = !role || member.role === role;
                const matchStatus = !status || member.status === status;
                
                return matchSearch && matchRole && matchStatus;
            });

            displayTeam(filtered);
        }

        // Open modal
        function openModal(mode, id = null) {
            const modal = document.getElementById('teamModal');
            const title = document.getElementById('modalTitle');
            const form = document.getElementById('teamForm');
            
            if (mode === 'create') {
                title.textContent = 'Add New Team Member';
                form.reset();
                document.getElementById('memberId').value = '';
                document.getElementById('photoPreview').classList.add('hidden');
            } else if (mode === 'edit' && id) {
                title.textContent = 'Edit Team Member';
                loadMemberForEdit(id);
            }
            
            modal.classList.add('show');
        }

        // Close modal
        function closeModal() {
            document.getElementById('teamModal').classList.remove('show');
        }

        // Load member for editing
        async function loadMemberForEdit(id) {
            try {
                const response = await fetch(`${API_BASE}/team/${id}`, {
                    headers: { 'Authorization': token }
                });
                const data = await response.json();
                
                if (data.success) {
                    const member = data.data;
                    document.getElementById('memberId').value = member.id;
                    document.getElementById('memberName').value = member.name;
                    document.getElementById('memberRole').value = member.role;
                    document.getElementById('memberEmail').value = member.email || '';
                    document.getElementById('memberPhone').value = member.phone || '';
                    document.getElementById('memberSpecialization').value = member.specialization || '';
                    document.getElementById('memberBio').value = member.bio || '';
                    document.getElementById('memberStatus').value = member.status || 'active';
                    document.getElementById('memberLinkedin').value = member.linkedin || '';
                    document.getElementById('memberScholar').value = member.scholar || '';
                    
                    // Show photo preview if exists
                    if (member.photo) {
                        document.getElementById('previewImg').src = `/images/team/${member.photo}`;
                        document.getElementById('photoPreview').classList.remove('hidden');
                    }
                }
            } catch (error) {
                console.error('Error loading member for edit:', error);
                showAlert('Failed to load member data', 'error');
            }
        }

        // Handle form submission
        async function handleFormSubmit(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const id = formData.get('id');
            
            const isEdit = !!id;
            const url = isEdit ? `${API_BASE}/team/${id}` : `${API_BASE}/team`;
            const method = isEdit ? 'PUT' : 'POST';
            
            try {
                const response = await fetch(url, {
                    method: method,
                    headers: { 'Authorization': token },
                    body: formData
                });
                
                const data = await response.json();
                
                if (data.success) {
                    showAlert(isEdit ? 'Member updated successfully' : 'Member added successfully', 'success');
                    closeModal();
                    loadTeam();
                } else {
                    showAlert(data.message || 'Failed to save member', 'error');
                }
            } catch (error) {
                console.error('Error saving member:', error);
                showAlert('Failed to save member', 'error');
            }
        }

        // Delete member
        async function deleteMember(id) {
            if (!confirm('Are you sure you want to delete this team member?')) {
                return;
            }
            
            try {
                const response = await fetch(`${API_BASE}/team/${id}`, {
                    method: 'DELETE',
                    headers: { 'Authorization': token }
                });
                
                const data = await response.json();
                
                if (data.success) {
                    showAlert('Member deleted successfully', 'success');
                    loadTeam();
                } else {
                    showAlert(data.message || 'Failed to delete member', 'error');
                }
            } catch (error) {
                console.error('Error deleting member:', error);
                showAlert('Failed to delete member', 'error');
            }
        }

        // Update stats
        function updateStats() {
            document.getElementById('totalMembers').textContent = teamData.length;
        }

        // Show alert
        function showAlert(message, type = 'success') {
            // Create alert element
            const alert = document.createElement('div');
            alert.className = `fixed top-20 right-4 z-50 p-4 rounded-lg max-w-sm ${
                type === 'success' ? 'bg-green-100 text-green-700 border border-green-300' : 'bg-red-100 text-red-700 border border-red-300'
            }`;
            alert.innerHTML = `
                <div class="flex items-center">
                    <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-triangle'} mr-2"></i>
                    <span>${message}</span>
                </div>
            `;
            
            document.body.appendChild(alert);
            
            // Auto remove after 3 seconds
            setTimeout(() => {
                alert.remove();
            }, 3000);
        }

        // Logout function
        function logout() {
            localStorage.removeItem('adminToken');
            window.location.href = '/admin/login';
        }
    </script>
</body>
</html>
